<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.education.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.education.pojo.Teacher" >
    <constructor >
      <idArg column="teacher_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column=" teacher_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column=" teacher_pwd" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column=" teacher_sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column=" teacher_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column=" teacher_email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column=" teacher_img" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    teacher_id, " teacher_name", " teacher_pwd", " teacher_sex", " teacher_phone", " teacher_email",
    " teacher_img"
  </sql>

  <!-- 验证手机号码 -->
  <select id="checkPhone" parameterType="java.lang.String" resultType="Integer">
        select count(teacher_phone) from teacher where teacher_phone=#{phone}
    </select>

  <!-- 查询所有教师 -->
  <select id="queryTeacherList" parameterType="Map" resultType="com.education.pojo.Teacher">
    SELECT teacher_id, teacher_name, teacher_pwd, teacher_sex, teacher_phone, teacher_email,teacher_img FROM teacher
    where 1=1
    <if test="teacherId!=null">
      and teacher_id like '%${teacherId}%'
    </if>
    <if test="teacherName!=null">
      and teacher_name like '%${teacherName}%'
    </if>
  </select>

  <!-- 根据教师ID找教师 -->
  <select id="queryTeacherById" parameterType="Integer" resultType="com.education.pojo.Teacher">
    select * from teacher where teacher_id=#{teacherId}
  </select>

  <!-- 根据ID删教师 -->
  <delete id="deleteTeacherById" parameterType="Integer" >
    delete from teacher where teacher_id=#{teacherId}
  </delete>

  <!-- 添加教师 -->
  <insert id="insertTeacher" parameterType="com.education.pojo.Teacher">
      insert into teacher(teacher_id,teacher_name,teacher_pwd,teacher_sex,teacher_phone,teacher_email,teacher_img)
       values(#{teacherId},#{teacherName},#{teacherPwd},#{teacherSex},#{teacherPhone},#{teacherEmail},#{teacherImg})
  </insert>

  <!-- 修改教师信息 -->
  <update id="updateTeacher" parameterType="com.education.pojo.Teacher">
        update teacher
        set teacher_name=#{teacherName},teacher_pwd=#{teacherPwd},teacher_sex=#{teacherSex},teacher_phone=#{teacherPhone},teacher_email=#{teacherEmail},teacher_img=#{teacherImg}
        where teacher_id=#{teacherId}
    </update>

















  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>

  <select id="login" parameterType="com.education.pojo.Teacher" resultType="com.education.pojo.Teacher">
    select t.* from teacher t
    where t.teacher_id=#{teacherId} and t.teacher_pwd=#{teacherPwd}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.education.pojo.Teacher" >
    insert into teacher (teacher_id, " teacher_name", " teacher_pwd", 
      " teacher_sex", " teacher_phone", " teacher_email", 
      " teacher_img")
    values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{teacherPwd,jdbcType=VARCHAR}, 
      #{teacherSex,jdbcType=VARCHAR}, #{teacherPhone,jdbcType=VARCHAR}, #{teacherEmail,jdbcType=VARCHAR}, 
      #{teacherImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.education.pojo.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        " teacher_name",
      </if>
      <if test="teacherPwd != null" >
        " teacher_pwd",
      </if>
      <if test="teacherSex != null" >
        " teacher_sex",
      </if>
      <if test="teacherPhone != null" >
        " teacher_phone",
      </if>
      <if test="teacherEmail != null" >
        " teacher_email",
      </if>
      <if test="teacherImg != null" >
        " teacher_img",
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null" >
        #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherPhone != null" >
        #{teacherPhone,jdbcType=VARCHAR},
      </if>
      <if test="teacherEmail != null" >
        #{teacherEmail,jdbcType=VARCHAR},
      </if>
      <if test="teacherImg != null" >
        #{teacherImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.education.pojo.Teacher" >
    update teacher
    <set >
      <if test="teacherName != null" >
        " teacher_name" = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        " teacher_pwd" = #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null" >
        " teacher_sex" = #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherPhone != null" >
        " teacher_phone" = #{teacherPhone,jdbcType=VARCHAR},
      </if>
      <if test="teacherEmail != null" >
        " teacher_email" = #{teacherEmail,jdbcType=VARCHAR},
      </if>
      <if test="teacherImg != null" >
        " teacher_img" = #{teacherImg,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.education.pojo.Teacher" >
    update teacher
    set " teacher_name" = #{teacherName,jdbcType=VARCHAR},
      " teacher_pwd" = #{teacherPwd,jdbcType=VARCHAR},
      " teacher_sex" = #{teacherSex,jdbcType=VARCHAR},
      " teacher_phone" = #{teacherPhone,jdbcType=VARCHAR},
      " teacher_email" = #{teacherEmail,jdbcType=VARCHAR},
      " teacher_img" = #{teacherImg,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>